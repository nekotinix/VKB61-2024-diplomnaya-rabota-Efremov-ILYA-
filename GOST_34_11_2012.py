from bitstring import BitArray
import os
def Hash(name, bitrate):

    def X(k,a):
        return (k^a)

    def S(a):

        pi= [252, 238, 221, 17, 207, 110, 49, 22, 251, 196, 250, 218, 35, 197, 4, 77, 233, 119, 240,
             219, 147, 46, 153, 186, 23, 54, 241, 187, 20, 205, 95, 193, 249, 24, 101, 90, 226, 92, 239,
             33, 129, 28, 60, 66, 139, 1, 142, 79, 5, 132, 2, 174, 227, 106, 143, 160, 6, 11, 237, 152, 127,
             212, 211, 31, 235, 52, 44, 81, 234, 200, 72, 171, 242, 42, 104, 162, 253, 58, 206, 204, 181,
             112, 14, 86, 8, 12, 118, 18, 191, 114, 19, 71, 156, 183, 93, 135, 21, 161, 150, 41, 16, 123,
             154, 199, 243, 145, 120, 111, 157, 158, 178, 177, 50, 117, 25, 61, 255, 53, 138, 126, 109,
             84, 198, 128, 195, 189, 13, 87, 223, 245, 36, 169, 62, 168, 67, 201, 215, 121, 214, 246, 124,
             34, 185, 3, 224, 15, 236, 222, 122, 148, 176, 188, 220, 232, 40, 80, 78, 51, 10, 74, 167, 151,
             96, 115, 30, 0, 98, 68, 26, 184, 56, 130, 100, 159, 38, 65, 173, 69, 70, 146, 39, 94, 85, 47,
             140, 163, 165, 125, 105, 213, 149, 59, 7, 88, 179, 64, 134, 172, 29, 247, 48, 55, 107, 228,
             136, 217, 231, 137, 225, 27, 131, 73, 76, 63, 248, 254, 141, 83, 170, 144, 202, 216, 133, 97,
             32, 113, 103, 164, 45, 43, 9, 91, 203, 155, 37, 208, 190, 229, 108, 82, 89, 166, 116, 210,
             230, 244, 180, 192, 209, 102, 175, 194, 57, 75, 99, 182]

        u=0
        for i in range(64):
            u+=pi[a>>(8*i)&0xFF]<<(8*i)

        return (u)

         
    def P(a):
         
        tau= [0, 8, 16, 24, 32, 40, 48, 56, 1, 9, 17, 25, 33, 41, 49, 57, 2, 10, 18, 26, 34, 42, 50, 58,
              3, 11, 19, 27, 35, 43, 51, 59, 4, 12, 20, 28, 36, 44, 52, 60, 5, 13, 21, 29, 37, 45, 53, 61, 6, 14,
              22, 30, 38, 46, 54, 62, 7, 15, 23, 31, 39, 47, 55, 63]
        u=0
        for i in range(64):
            u+=(a>>(8*i)&0xFF)<<(8*tau.index(i))
        return u


    def L(a):
        matrix=[10241461148538942576, 5120731167067232824, 12468410047768571164, 15565663454169962510, 7782831729257630727,
                3891415866600138381, 1985536642513638344, 9459682407487014756, 11534232669555429184, 5802579435438197024,
                2901440900576963088, 1490673956378146056, 781787989577348100, 423967304552176130, 10119902832491179265,
                5095276525830510734, 10437854279325378415, 5219060730325499321, 2645981896492773586, 1322990948246386793,
                661629067092835514, 9950503947520319069, 5009451183430504352, 12451499320283924816, 11334980120984556625,
                13882478482664131238, 6941239243714266451, 3470619621865131175, 1735309813114226397, 901996504954577888,
                451145037279633264, 225573111445307704, 9666798413180086952, 4872226810457511252, 12664210371452249130,
                15663563615944659477, 16298549109340514692, 8149275110868556354, 13117866180572368161, 6559084273135036574,
                5002431046872466873, 12409134703651359954, 6204567353729893993, 3135499373384246202, 11227267738987503453,
                14116852178442830240, 17292153162716999248, 17977673556417476392, 16499535732793881244, 8249767866405689678,
                4156831343068283431, 10545183492837949853, 5272591748466192064, 12255984678304175968, 6128148527793546544,
                11856648851277863960, 8117357270855080334, 4058829818276389447, 2064740540553908653, 1071073603652986584,
                567617802345927532, 10191861674357729078, 14427389804108963099, 7213694902063784067]
        r=0
        for i in range(8):
            u=a>>(64*i)&0xFFFFFFFFFFFFFFFF
            k=0
            for z in range(64):
                v=0
                for j in range(64):
                    v=v^((u>>j&0x01)&(matrix[63-j]>>(z)&0x01))
                k+=v<<z
            r+=k<<(64*i)
        return r




    def compression_function(h,m,N):
        
        C=[9271952302036726707464619066406449061201922510981307533052391904539851438198779437684499166495605908696696395396703780066505304854700528500733869472236807,
           5847034468651946426848610680326440189821259797033585813872824920102006412452277523869265359351039270067359032252332176818826495844981711927062309524052919,
           12855599619213405326989695856318953749057279203532732653057154995608217136259927701763872471852888512181316132120397454408687904203346535230358817122945714,
           12523966654901980304166588060651380442999340258851027286915982967116642763467631746317653262865869831820277845065492543599568720157795139839925290627485998,
           3976028117105906710344899547505265689877668842213721548534545847042695335036785313791724294172749047457650021258585787860775369526561064543333548498419287,
           9129421417217456972020366778250348812621419758109761415928941534954630902440992081693128749609980360630850897237650591207760357275231919768466651108113774,
           12820040988847903795024063654818539012586640184351095078151094695228184322867359474099486564871047571700634205029000536301948317028656571181062543308543123,
           8124423833120866260560063067149867437577083658813515486861387765166719232844453379758701455496036421227050928446095044244872202210199979305164282947364638,
           2909911851090769897136437046626277805612150356275741532610643574288769230829856465209793092500488689144279808315804877154049706466934492377744849483553499,
           8995046151657614911268307915520771836361517658084237341834218722280406832905310852013473904318314951661137456094634844621276797544931435375476598607551725,
           6484099954236335595309889966056451424421582726577817273572325499564519094261412993710588816978683657721575198883121808749620473121855027437001521662995739,
           2909820008795946073479074451552918963593915956450244732757949098072342441869919155885429651575574909041415783590698549784719544848667884960327705611196192]

        K=[L(P(S(X(h,N))))]
        E=L(P(S(X(K[0],m))))
        
        for i in range(len(C)):
            K.append(L(P(S(X(K[i],C[i])))))
            if i<11:
                E=L(P(S(X(K[i+1],E))))
            else:
                E=X(K[i+1],E)

        return (E^h^m)
    
    if name==None:
        print("error")
    with open("temp_file",mode='w') as f:
        f.write(name)

    file=open("temp_file",'rb')
    m=BitArray(bytes=file.read(64)).bin
    
    if bitrate==512:
        h=0
    elif bitrate==256:
        h=52579638940951361174800098032179788735213199296440758344013966445967702078719792065889703130066287951725615130143082552367662285537045372338955486298369
    N=0
    SUM=0
    
    i=0
    while m:
        i+=1

        size=len(m)
        m=int(m,2)

        while size%8!=0: size+=1
        if size<512:
            m=(1<<size)|m

    
        h=compression_function(h,m,N)

        N=(N+size)%2**512

        SUM=(SUM+m)%2**512
    
        m=BitArray(bytes=file.read(64)).bin
    file.close()
    if os.path.exists("temp_file"):
        os.remove("temp_file")
    else:
        print("Файл не существует")

    h=compression_function(h,N,0)
    h=compression_function(h,SUM,0)
    
    if bitrate==256:
        h=h>>256


    return (h)

